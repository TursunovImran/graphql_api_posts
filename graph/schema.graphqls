# schema.graphql

# Описания типов данных
type Post {
  id: Int!
  authorId: Int!
  title: String!
  content: String!
  createdAt: String!
  comments: [Comment!]
  canComment: Boolean!
}

type Comment {
  id: Int!
  postId: Int!
  authorId: Int!
  content: String! # Ограничено 2000 символами
  createdAt: String!
  parentId: Int # Внешний ключ к родительскому комментарию, NULL для комментария к посту
  replies: [Comment!]
}

type User {
  id: Int!
  username: String!
  posts: [Post!]
  comments: [Comment!]
}

# Вспомогательные типы данных
input PaginationInput {
  limit: Int!
  page: Int!
}

input PostInput {
  title: String!
  content: String!
  canComment: Boolean!
}

input CommentInput {
  content: String!
  parentId: Int # Внешний ключ к родительскому комментарию, NULL для комментария к посту
}

# Взаимодействия с API
type Query {
  getPosts: [Post!]!
  getPost(id: Int!): Post!
  getComments(postId: Int!, pagination: PaginationInput): [Comment!]!
}

type Mutation {
  createPost(postInput: PostInput!): Post!
  createComment(commentInput: CommentInput!): Comment!
  deletePost(id: Int!): Boolean!
  deleteComment(id: Int!): Boolean!
}

type Subscription {
  postComments(postId: Int!): Comment!
}
